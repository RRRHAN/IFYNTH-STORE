// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package wireinject

import (
	"github.com/RRRHAN/IFYNTH-STORE/back-end/database"
	"github.com/RRRHAN/IFYNTH-STORE/back-end/domains/product"
	"github.com/RRRHAN/IFYNTH-STORE/back-end/domains/user"
	"github.com/RRRHAN/IFYNTH-STORE/back-end/middlewares"
	"github.com/RRRHAN/IFYNTH-STORE/back-end/routes"
	"github.com/RRRHAN/IFYNTH-STORE/back-end/utils/config"
	"github.com/go-playground/validator/v10"
	"github.com/google/wire"
)

import (
	_ "github.com/google/subcommands"
)

// Injectors from wire.go:

func initializeDependency(config2 *config.Config) (*routes.Dependency, error) {
	db, err := database.NewDB(config2)
	if err != nil {
		return nil, err
	}
	service := user.NewService(config2, db)
	middlewaresMiddlewares := middlewares.NewMiddlewares(config2, service)
	validate := validator.New()
	handler := user.NewHandler(service, validate)
	productService := product.NewService(config2, db)
	productHandler := product.NewHandler(productService, validate)
	dependency := routes.NewDependency(config2, middlewaresMiddlewares, db, handler, productHandler)
	return dependency, nil
}

// wire.go:

var userSet = wire.NewSet(user.NewService, user.NewHandler)

var productSet = wire.NewSet(product.NewService, product.NewHandler)
